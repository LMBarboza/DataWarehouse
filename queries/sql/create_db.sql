CREATE TABLE IF NOT EXISTS public.PJ (
    ID_PJ SERIAL PRIMARY KEY,
    CNPJ VARCHAR(18) UNIQUE NOT NULL,
    Nome VARCHAR(255) NOT NULL,
    Endereco VARCHAR(255)
);

CREATE TABLE IF NOT EXISTS public.SEGUROS (
    ID_SEGUROS SERIAL PRIMARY KEY,
    Vidros VARCHAR(255),
    Farois VARCHAR(255),
    Faixa_Indenizacao VARCHAR(100)
);

CREATE TABLE IF NOT EXISTS public.PF (
    ID_PF SERIAL PRIMARY KEY,
    Nome VARCHAR(255) NOT NULL,
    CPF VARCHAR(14) UNIQUE NOT NULL,
    CNH VARCHAR(20) UNIQUE NOT NULL,
    Categoria_CNH VARCHAR(5),
    Endereco VARCHAR(255),
    Nacionalidade VARCHAR(50),
    Data_Nascimento DATE,
    Data_Expedicao_CNH DATE,
    ID_PJ INTEGER,
    CONSTRAINT FK_PF_PJ FOREIGN KEY (ID_PJ) REFERENCES public.PJ(ID_PJ) ON DELETE SET NULL ON UPDATE CASCADE
);

CREATE TABLE IF NOT EXISTS public.PATIO (
    ID_PATIO SERIAL PRIMARY KEY,
    ID_PJ INTEGER NOT NULL,
    Endereco VARCHAR(255) NOT NULL,
    CONSTRAINT FK_PATIO_PJ FOREIGN KEY (ID_PJ) REFERENCES public.PJ(ID_PJ) ON DELETE CASCADE ON UPDATE CASCADE
);

CREATE TABLE IF NOT EXISTS public.VEICULO (
    ID_VEICULO SERIAL PRIMARY KEY,
    Placa VARCHAR(10) UNIQUE NOT NULL,
    Chassi VARCHAR(17) UNIQUE NOT NULL,
    Grupo VARCHAR(50),
    Modelo VARCHAR(100),
    Marca VARCHAR(100),
    Cor VARCHAR(50),
    AC BOOLEAN DEFAULT FALSE,
    Crianca BOOLEAN DEFAULT FALSE,
    Bebe BOOLEAN DEFAULT FALSE,
    Teto_Solar BOOLEAN DEFAULT FALSE,
    Multimidia BOOLEAN DEFAULT FALSE,
    ID_PJ INTEGER NOT NULL,
    ID_VAGAS INTEGER UNIQUE,
    CONSTRAINT FK_VEICULO_PJ FOREIGN KEY (ID_PJ) REFERENCES public.PJ(ID_PJ) ON DELETE RESTRICT ON UPDATE CASCADE
);

CREATE TABLE IF NOT EXISTS public.VAGAS (
    ID_VAGAS SERIAL PRIMARY KEY,
    ID_PATIO INTEGER NOT NULL,
    ID_VEICULO INTEGER UNIQUE,
    CONSTRAINT FK_VAGAS_PATIO FOREIGN KEY (ID_PATIO) REFERENCES public.PATIO(ID_PATIO) ON DELETE CASCADE ON UPDATE CASCADE,
    CONSTRAINT FK_VAGAS_VEICULO FOREIGN KEY (ID_VEICULO) REFERENCES public.VEICULO(ID_VEICULO) ON DELETE SET NULL ON UPDATE CASCADE
);

CREATE TABLE IF NOT EXISTS public.DISPONIBILIDADE (
    ID_DISPONIBILIDADE SERIAL PRIMARY KEY,
    Data_Retirada DATE NOT NULL,
    Data_Devolucao DATE NOT NULL,
    ID_VEICULO INTEGER NOT NULL,
    CONSTRAINT FK_DISPONIBILIDADE_VEICULO FOREIGN KEY (ID_VEICULO) REFERENCES public.VEICULO(ID_VEICULO) ON DELETE CASCADE ON UPDATE CASCADE,
    CONSTRAINT CHK_DISPONIBILIDADE_DATAS CHECK (Data_Devolucao >= Data_Retirada)
);

CREATE TABLE IF NOT EXISTS public.RESERVA (
    ID_RESERVA SERIAL PRIMARY KEY,
    ID_VEICULO INTEGER NOT NULL,
    ID_PF INTEGER,
    ID_PJ INTEGER,
    Data_Inicio DATE NOT NULL,
    Data_Fim DATE NOT NULL,
    CONSTRAINT FK_RESERVA_VEICULO FOREIGN KEY (ID_VEICULO) REFERENCES public.VEICULO(ID_VEICULO) ON DELETE RESTRICT ON UPDATE CASCADE,
    CONSTRAINT FK_RESERVA_PF FOREIGN KEY (ID_PF) REFERENCES public.PF(ID_PF) ON DELETE SET NULL ON UPDATE CASCADE,
    CONSTRAINT FK_RESERVA_PJ FOREIGN KEY (ID_PJ) REFERENCES public.PJ(ID_PJ) ON DELETE SET NULL ON UPDATE CASCADE,
    CONSTRAINT CHK_RESERVA_DATAS CHECK (Data_Fim >= Data_Inicio),
    CONSTRAINT CHK_RESERVA_CUSTOMER CHECK (ID_PF IS NOT NULL OR ID_PJ IS NOT NULL)
);

CREATE TABLE IF NOT EXISTS public.ESTADO_VEICULO (
    ID_ESTADO_VEICULO SERIAL PRIMARY KEY,
    Pressao_Pneu VARCHAR(50),
    Nivel_Oleo VARCHAR(50),
    Gasolina VARCHAR(50),
    Quilometragem VARCHAR(20),
    Motor VARCHAR(100),
    Freios VARCHAR(100),
    Estado_Pneu VARCHAR(100),
    Vidros VARCHAR(100),
    Bateria VARCHAR(100),
    Estepe VARCHAR(100),
    Pintura VARCHAR(100),
    Retrovisor VARCHAR(100),
    Limpador_Parabrisa VARCHAR(100),
    Data_Revisao DATE NOT NULL,
    ID_VEICULO INTEGER NOT NULL,
    ID_LOCACAO INTEGER,
    CONSTRAINT FK_ESTADO_VEICULO_VEICULO FOREIGN KEY (ID_VEICULO) REFERENCES public.VEICULO(ID_VEICULO) ON DELETE CASCADE ON UPDATE CASCADE
);

CREATE TABLE IF NOT EXISTS public.LOCACAO (
    ID_LOCACAO SERIAL PRIMARY KEY,
    Data_Retirada DATE NOT NULL,
    Data_Devolucao DATE,
    Vaga_Retirada VARCHAR(50),
    Vaga_Devolucao VARCHAR(50),
    ID_PF INTEGER NOT NULL,
    ID_ESTADO_VEICULO_Retirada INTEGER UNIQUE NOT NULL,
    ID_ESTADO_VEICULO_Devolucao INTEGER UNIQUE,
    ID_SEGUROS INTEGER,
    ID_RESERVA INTEGER UNIQUE,
    CONSTRAINT FK_LOCACAO_PF FOREIGN KEY (ID_PF) REFERENCES public.PF(ID_PF) ON DELETE RESTRICT ON UPDATE CASCADE,
    CONSTRAINT FK_LOCACAO_ESTADO_RETIRADA FOREIGN KEY (ID_ESTADO_VEICULO_Retirada) REFERENCES public.ESTADO_VEICULO(ID_ESTADO_VEICULO) ON DELETE RESTRICT ON UPDATE CASCADE,
    CONSTRAINT FK_LOCACAO_ESTADO_DEVOLUCAO FOREIGN KEY (ID_ESTADO_VEICULO_Devolucao) REFERENCES public.ESTADO_VEICULO(ID_ESTADO_VEICULO) ON DELETE RESTRICT ON UPDATE CASCADE,
    CONSTRAINT FK_LOCACAO_SEGUROS FOREIGN KEY (ID_SEGUROS) REFERENCES public.SEGUROS(ID_SEGUROS) ON DELETE SET NULL ON UPDATE CASCADE,
    CONSTRAINT FK_LOCACAO_RESERVA FOREIGN KEY (ID_RESERVA) REFERENCES public.RESERVA(ID_RESERVA) ON DELETE SET NULL ON UPDATE CASCADE,
    CONSTRAINT CHK_LOCACAO_DATAS CHECK (Data_Devolucao IS NULL OR Data_Devolucao >= Data_Retirada)
);
